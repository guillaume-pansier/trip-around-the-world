describe("SvgPanZoom directive", function () {
    var _scope, _spz, element, elementWithZoomDisabled;
    var elementString = "<svg id='demotag' data-svg-pan-zoom> </svg>";
    var elementStringWithZoomDisabled = "<svg id='demotag1' data-svg-pan-zoom zoom-Enabled='false'> </svg>";
    beforeEach(angular.mock.module("demo"));
    beforeEach(inject(function (spz, $rootScope, $compile) {
        _scope = $rootScope.$new(true);
        _spz = spz;
        element = $compile(elementString)(_scope);
        elementWithZoomDisabled = $compile(elementStringWithZoomDisabled)(_scope);
        angular.element("body").append(elementWithZoomDisabled);
        _scope.$digest();
    }));
    afterEach(function () {
        angular.element("body").remove("#demotag1");
    });
    it("should apply default options", function () {
        expect(element).toBeDefined();
    });
    it("should disable zoom if zoom is disabled from attribute", function () {
        expect(elementWithZoomDisabled).toBeDefined();
        var ele = _spz("#demotag1");
        expect(ele.isZoomEnabled()).toBeFalsy();
    });
});
